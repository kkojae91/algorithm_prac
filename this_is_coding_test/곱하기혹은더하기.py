"""
chapter11 그리디 문제 02번 문제 곱하기 혹은 더하기
각 자리가 숫자 0~9로만 이루어진 문자열 S가 주어질 때, 
왼쪽 -> 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 x, + 연산자를 넣어 결과적으로 만들어질 수 있는
가장 큰 수를 구하는 프로그램을 작성하시오.
단, 일반적인 연산과는 달리 모든 연산은 왼쪽에서부터 오른쪽으로 진행된다.
예를들어 02984라는 문자열이 주어지면, 만들어질 수 있는 가장 큰 수 (0+2)*9*8*4 = 576입니다.
또한 만들어질 수 있는 가장 큰수는 항상 20억 이하의 정수가 되도록 입력이 주어집니다.

첫째 줄에 여러 개의 숫자로 구성된 하나의 문자열 S가 주어집니다. (1<=S<=20)

첫째 줄에 만들어질 수 있는 가장 큰 수를 출력합니다.

02984
567
"""
from sys import stdin

# 단순하게 풀이 하면 된다.
# 0과 1일 경우는 더해주고, 그 외의 경우는 곱해준다.
# 예외 처리 첫 번째 값이 0과 1일 경우를 체크, 숫자가 0과 1일 경우를 체크
def solution(s):
  answer = int(s[0])
  for i in range(1, len(s)):
    num = int(s[i])
    if num <= 1 or answer <= 1:
      answer += num
    else:
      answer *= num

  return answer

def init():
  S = str(stdin.readline().rstrip())
  print(solution(S))

init()